{
  "_args": [
    [
      {
        "raw": "http-template",
        "scope": null,
        "escapedName": "http-template",
        "name": "http-template",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "D:\\Work\\invp-formbuilder"
    ]
  ],
  "_from": "http-template@latest",
  "_id": "http-template@0.0.7",
  "_inCache": true,
  "_location": "/http-template",
  "_phantomChildren": {},
  "_requested": {
    "raw": "http-template",
    "scope": null,
    "escapedName": "http-template",
    "name": "http-template",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/http-template/-/http-template-0.0.7.tgz",
  "_shasum": "b244e6976d5dc2eb13980de805a5777e9f6fd004",
  "_shrinkwrap": null,
  "_spec": "http-template",
  "_where": "D:\\Work\\invp-formbuilder",
  "author": {
    "name": "Adam Langsner",
    "email": "adamlangsner@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/adamlangsner/http-template/issues"
  },
  "dependencies": {
    "underscore": "1.3.3"
  },
  "description": "node module that uses templated files containing raw http to create http requests",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "b244e6976d5dc2eb13980de805a5777e9f6fd004",
    "tarball": "https://registry.npmjs.org/http-template/-/http-template-0.0.7.tgz"
  },
  "homepage": "https://github.com/adamlangsner/http-template#readme",
  "keywords": [
    "nodejs",
    "http"
  ],
  "license": "BSD",
  "main": "index.js",
  "maintainers": [
    {
      "name": "adamlangsner",
      "email": "adamlangsner@gmail.com"
    }
  ],
  "name": "http-template",
  "optionalDependencies": {},
  "readme": "http-template\n=============\n\nnode module for sending http request using files containing raw HTTP\n\nInstallation\n------------\n\n    npm install http-template\n\nExplanation and Usage\n---------------------\n\nhttp-template is a simple module that reads http templates and uses them to send HTTP requests. An http template is just a file with the extension '.http' that contains raw http. Here's an example file (a google search):\n\n    GET /search?hl=en&output=search&sclient=psy-ab&q={{query}}&btnK= HTTP/1.1\n    Host: www.google.com\n    User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2\n    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\n    Referer: http://www.google.com/\n    Accept-Language: en-us\n    Accept-Encoding: gzip, deflate\n    Connection: keep-alive\n\n\nnotice the **{{query}}** on the first line. This is how we can modify the request with dynamic data. One good use for this is inserting session IDs into a request:\n\n    ...\n    Cookie: {{session_id}}; path=/;\n    ...\n\n\nto send this request we can write the following app. Let's assume the the file shown above is named **google.http** and is in the **templates** directory\n\n```js\n// require the module and set the path to where templates are stored\nvar httpTemplate = require('http-template')(__dirname + '/templates');\n\n// send a request using google.http, pass in object with query to search for\nhttpTemplate('google', {query: 'nodejs+api'}, function(response, body) {\n    console.log(body);\n});\n```\n\nArguments\n---------\n\n### template name\nthe first argument specifies the name of the file to use without the **.http** extension. If you want to add sub-directories in your templates folder you can simply pass in 'sub_folder/file_name', once again leave off the **.http** extension.\n\n### data\nthe second argument is an object containing the data to render the template with. In the above example, we passed in **{query: 'nodejs+api'}** to fill in the **{{query}}** variable in the template. http-template uses underscore with mustache style interpolation tokens (**{{ }}**) to render templates.\n\n### options \nthe third argument can be an options object or the callback. the current supported options are as follows:\n\n    - https: boolean (default: false) - if set to true request will be sent using https\n    - autoContentLength: boolean (default: true) - when true, httpTemplate will fill in the 'Content-Length' header for you.\n\n```js\n// send request over https\nhttpTemplate.('google', {query: 'garbage'}, {https: true}, function(res, body) {\n\t\n});\n```\n\n### callback\nthe last argument (3rd or 4th if you pass in options) is a callback which takes two arguments, the response object and the body string. the body is provided in addition to the response because if the response is gzipped, http-template will deflate it and pass the deflated body to the callback along with the response object.\n\n\n\n",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/adamlangsner/http-template.git"
  },
  "version": "0.0.7"
}
