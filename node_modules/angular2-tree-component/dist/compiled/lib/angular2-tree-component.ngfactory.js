/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var import0 = require('@angular/core/src/linker/ng_module_factory');
var import1 = require('../../lib/angular2-tree-component');
var import2 = require('@angular/common/src/common_module');
var import3 = require('@angular/common/src/localization');
var import5 = require('@angular/core/src/i18n/tokens');
var import6 = require('../../lib/components/adhoc-component-factory.service');
var import7 = require('@angular/core/src/linker/compiler');
var TreeModuleInjector = (function (_super) {
    __extends(TreeModuleInjector, _super);
    function TreeModuleInjector(parent) {
        _super.call(this, parent, [], []);
    }
    Object.defineProperty(TreeModuleInjector.prototype, "_NgLocalization_2", {
        get: function () {
            if ((this.__NgLocalization_2 == null)) {
                (this.__NgLocalization_2 = new import3.NgLocaleLocalization(this.parent.get(import5.LOCALE_ID)));
            }
            return this.__NgLocalization_2;
        },
        enumerable: true,
        configurable: true
    });
    TreeModuleInjector.prototype.createInternal = function () {
        this._CommonModule_0 = new import2.CommonModule();
        this._TreeModule_1 = new import1.TreeModule();
        return this._TreeModule_1;
    };
    TreeModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === import2.CommonModule)) {
            return this._CommonModule_0;
        }
        if ((token === import1.TreeModule)) {
            return this._TreeModule_1;
        }
        if ((token === import3.NgLocalization)) {
            return this._NgLocalization_2;
        }
        return notFoundResult;
    };
    TreeModuleInjector.prototype.destroyInternal = function () {
    };
    return TreeModuleInjector;
}(import0.NgModuleInjector));
exports.TreeModuleNgFactory = new import0.NgModuleFactory(TreeModuleInjector, import1.TreeModule);
var DeprecatedTreeModuleInjector = (function (_super) {
    __extends(DeprecatedTreeModuleInjector, _super);
    function DeprecatedTreeModuleInjector(parent) {
        _super.call(this, parent, [], []);
    }
    Object.defineProperty(DeprecatedTreeModuleInjector.prototype, "_NgLocalization_3", {
        get: function () {
            if ((this.__NgLocalization_3 == null)) {
                (this.__NgLocalization_3 = new import3.NgLocaleLocalization(this.parent.get(import5.LOCALE_ID)));
            }
            return this.__NgLocalization_3;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DeprecatedTreeModuleInjector.prototype, "_AdHocComponentFactoryCreator_4", {
        get: function () {
            if ((this.__AdHocComponentFactoryCreator_4 == null)) {
                (this.__AdHocComponentFactoryCreator_4 = new import6.AdHocComponentFactoryCreator(this.parent.get(import7.Compiler)));
            }
            return this.__AdHocComponentFactoryCreator_4;
        },
        enumerable: true,
        configurable: true
    });
    DeprecatedTreeModuleInjector.prototype.createInternal = function () {
        this._CommonModule_0 = new import2.CommonModule();
        this._TreeModule_1 = new import1.TreeModule();
        this._DeprecatedTreeModule_2 = new import1.DeprecatedTreeModule();
        return this._DeprecatedTreeModule_2;
    };
    DeprecatedTreeModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === import2.CommonModule)) {
            return this._CommonModule_0;
        }
        if ((token === import1.TreeModule)) {
            return this._TreeModule_1;
        }
        if ((token === import1.DeprecatedTreeModule)) {
            return this._DeprecatedTreeModule_2;
        }
        if ((token === import3.NgLocalization)) {
            return this._NgLocalization_3;
        }
        if ((token === import6.AdHocComponentFactoryCreator)) {
            return this._AdHocComponentFactoryCreator_4;
        }
        return notFoundResult;
    };
    DeprecatedTreeModuleInjector.prototype.destroyInternal = function () {
    };
    return DeprecatedTreeModuleInjector;
}(import0.NgModuleInjector));
exports.DeprecatedTreeModuleNgFactory = new import0.NgModuleFactory(DeprecatedTreeModuleInjector, import1.DeprecatedTreeModule);
//# sourceMappingURL=data:application/json;base64,