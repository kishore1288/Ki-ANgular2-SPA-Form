/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
"use strict";
var import0 = require('@angular/common/src/directives/ng_class');
var import1 = require('@angular/core/src/change_detection/change_detection_util');
var import3 = require('@angular/core/src/linker/view_utils');
var Wrapper_NgClass = (function () {
    function Wrapper_NgClass(p0, p1, p2, p3) {
        this._changed = false;
        this.context = new import0.NgClass(p0, p1, p2, p3);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
    }
    Wrapper_NgClass.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_NgClass.prototype.ngOnDestroy = function () {
    };
    Wrapper_NgClass.prototype.check_klass = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.klass = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_NgClass.prototype.check_ngClass = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.ngClass = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_NgClass.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            this.context.ngDoCheck();
        }
        return changed;
    };
    Wrapper_NgClass.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_NgClass.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_NgClass.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_NgClass;
}());
exports.Wrapper_NgClass = Wrapper_NgClass;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmdfY2xhc3MubmdmYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vY29tcGlsZWQvbm9kZV9tb2R1bGVzL0Bhbmd1bGFyL2NvbW1vbi9zcmMvZGlyZWN0aXZlcy9uZ19jbGFzcy5uZ2ZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUNGLG9CQUFvQjs7QUFFckIsSUFBWSxPQUFPLFdBQU0seUNBQXlDLENBQUMsQ0FBQTtBQUNuRSxJQUFZLE9BQU8sV0FBTSwwREFBMEQsQ0FBQyxDQUFBO0FBRXBGLElBQVksT0FBTyxXQUFNLHFDQUFxQyxDQUFDLENBQUE7QUFDL0Q7SUFNRSx5QkFBWSxFQUFNLEVBQUMsRUFBTSxFQUFDLEVBQU0sRUFBQyxFQUFNO1FBQ3JDLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ3RCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ2hELElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQztRQUNyQyxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUM7SUFDdkMsQ0FBQztJQUNELG9DQUFVLEdBQVYsVUFBVyxJQUF5QixFQUFDLGFBQWtDLEVBQUMsRUFBTTtJQUM5RSxDQUFDO0lBQ0QscUNBQVcsR0FBWDtJQUNBLENBQUM7SUFDRCxxQ0FBVyxHQUFYLFVBQVksU0FBYSxFQUFDLGFBQXFCLEVBQUMsV0FBbUI7UUFDakUsRUFBRSxDQUFDLENBQUMsQ0FBQyxXQUFXLElBQUksT0FBTyxDQUFDLFlBQVksQ0FBQyxhQUFhLEVBQUMsSUFBSSxDQUFDLE9BQU8sRUFBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoRixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztZQUNyQixJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBRyxTQUFTLENBQUM7WUFDL0IsSUFBSSxDQUFDLE9BQU8sR0FBRyxTQUFTLENBQUM7UUFDM0IsQ0FBQztJQUNILENBQUM7SUFDRCx1Q0FBYSxHQUFiLFVBQWMsU0FBYSxFQUFDLGFBQXFCLEVBQUMsV0FBbUI7UUFDbkUsRUFBRSxDQUFDLENBQUMsQ0FBQyxXQUFXLElBQUksT0FBTyxDQUFDLFlBQVksQ0FBQyxhQUFhLEVBQUMsSUFBSSxDQUFDLE9BQU8sRUFBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoRixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztZQUNyQixJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sR0FBRyxTQUFTLENBQUM7WUFDakMsSUFBSSxDQUFDLE9BQU8sR0FBRyxTQUFTLENBQUM7UUFDM0IsQ0FBQztJQUNILENBQUM7SUFDRCxtQ0FBUyxHQUFULFVBQVUsSUFBeUIsRUFBQyxFQUFNLEVBQUMsYUFBcUI7UUFDOUQsSUFBSSxPQUFPLEdBQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUNoQyxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztRQUN0QixFQUFFLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7WUFBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQUMsQ0FBQztRQUNqRCxNQUFNLENBQUMsT0FBTyxDQUFDO0lBQ2pCLENBQUM7SUFDRCxtQ0FBUyxHQUFULFVBQVUsSUFBeUIsRUFBQyxhQUFrQyxFQUFDLEVBQU0sRUFBQyxhQUFxQjtJQUNuRyxDQUFDO0lBQ0QscUNBQVcsR0FBWCxVQUFZLFNBQWdCLEVBQUMsTUFBVTtRQUNyQyxJQUFJLE1BQU0sR0FBVyxJQUFJLENBQUM7UUFDMUIsTUFBTSxDQUFDLE1BQU0sQ0FBQztJQUNoQixDQUFDO0lBQ0QsbUNBQVMsR0FBVCxVQUFVLElBQXlCLEVBQUMsYUFBaUI7UUFDbkQsSUFBSSxDQUFDLGFBQWEsR0FBRyxhQUFhLENBQUM7SUFDckMsQ0FBQztJQUNILHNCQUFDO0FBQUQsQ0FBQyxBQTdDRCxJQTZDQztBQTdDWSx1QkFBZSxrQkE2QzNCLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgVGhpcyBmaWxlIGlzIGdlbmVyYXRlZCBieSB0aGUgQW5ndWxhciAyIHRlbXBsYXRlIGNvbXBpbGVyLlxuICogRG8gbm90IGVkaXQuXG4gKiBAc3VwcHJlc3Mge3N1c3BpY2lvdXNDb2RlLHVzZWxlc3NDb2RlLG1pc3NpbmdQcm9wZXJ0aWVzfVxuICovXG4gLyogdHNsaW50OmRpc2FibGUgKi9cblxuaW1wb3J0ICogYXMgaW1wb3J0MCBmcm9tICdAYW5ndWxhci9jb21tb24vc3JjL2RpcmVjdGl2ZXMvbmdfY2xhc3MnO1xuaW1wb3J0ICogYXMgaW1wb3J0MSBmcm9tICdAYW5ndWxhci9jb3JlL3NyYy9jaGFuZ2VfZGV0ZWN0aW9uL2NoYW5nZV9kZXRlY3Rpb25fdXRpbCc7XG5pbXBvcnQgKiBhcyBpbXBvcnQyIGZyb20gJ0Bhbmd1bGFyL2NvcmUvc3JjL2xpbmtlci92aWV3JztcbmltcG9ydCAqIGFzIGltcG9ydDMgZnJvbSAnQGFuZ3VsYXIvY29yZS9zcmMvbGlua2VyL3ZpZXdfdXRpbHMnO1xuZXhwb3J0IGNsYXNzIFdyYXBwZXJfTmdDbGFzcyB7XG4gIC8qcHJpdmF0ZSovIF9ldmVudEhhbmRsZXI6RnVuY3Rpb247XG4gIGNvbnRleHQ6aW1wb3J0MC5OZ0NsYXNzO1xuICAvKnByaXZhdGUqLyBfY2hhbmdlZDpib29sZWFuO1xuICAvKnByaXZhdGUqLyBfZXhwcl8wOmFueTtcbiAgLypwcml2YXRlKi8gX2V4cHJfMTphbnk7XG4gIGNvbnN0cnVjdG9yKHAwOmFueSxwMTphbnkscDI6YW55LHAzOmFueSkge1xuICAgIHRoaXMuX2NoYW5nZWQgPSBmYWxzZTtcbiAgICB0aGlzLmNvbnRleHQgPSBuZXcgaW1wb3J0MC5OZ0NsYXNzKHAwLHAxLHAyLHAzKTtcbiAgICB0aGlzLl9leHByXzAgPSBpbXBvcnQxLlVOSU5JVElBTElaRUQ7XG4gICAgdGhpcy5fZXhwcl8xID0gaW1wb3J0MS5VTklOSVRJQUxJWkVEO1xuICB9XG4gIG5nT25EZXRhY2godmlldzppbXBvcnQyLkFwcFZpZXc8YW55Pixjb21wb25lbnRWaWV3OmltcG9ydDIuQXBwVmlldzxhbnk+LGVsOmFueSk6dm9pZCB7XG4gIH1cbiAgbmdPbkRlc3Ryb3koKTp2b2lkIHtcbiAgfVxuICBjaGVja19rbGFzcyhjdXJyVmFsdWU6YW55LHRocm93T25DaGFuZ2U6Ym9vbGVhbixmb3JjZVVwZGF0ZTpib29sZWFuKTp2b2lkIHtcbiAgICBpZiAoKGZvcmNlVXBkYXRlIHx8IGltcG9ydDMuY2hlY2tCaW5kaW5nKHRocm93T25DaGFuZ2UsdGhpcy5fZXhwcl8wLGN1cnJWYWx1ZSkpKSB7XG4gICAgICB0aGlzLl9jaGFuZ2VkID0gdHJ1ZTtcbiAgICAgIHRoaXMuY29udGV4dC5rbGFzcyA9IGN1cnJWYWx1ZTtcbiAgICAgIHRoaXMuX2V4cHJfMCA9IGN1cnJWYWx1ZTtcbiAgICB9XG4gIH1cbiAgY2hlY2tfbmdDbGFzcyhjdXJyVmFsdWU6YW55LHRocm93T25DaGFuZ2U6Ym9vbGVhbixmb3JjZVVwZGF0ZTpib29sZWFuKTp2b2lkIHtcbiAgICBpZiAoKGZvcmNlVXBkYXRlIHx8IGltcG9ydDMuY2hlY2tCaW5kaW5nKHRocm93T25DaGFuZ2UsdGhpcy5fZXhwcl8xLGN1cnJWYWx1ZSkpKSB7XG4gICAgICB0aGlzLl9jaGFuZ2VkID0gdHJ1ZTtcbiAgICAgIHRoaXMuY29udGV4dC5uZ0NsYXNzID0gY3VyclZhbHVlO1xuICAgICAgdGhpcy5fZXhwcl8xID0gY3VyclZhbHVlO1xuICAgIH1cbiAgfVxuICBuZ0RvQ2hlY2sodmlldzppbXBvcnQyLkFwcFZpZXc8YW55PixlbDphbnksdGhyb3dPbkNoYW5nZTpib29sZWFuKTpib29sZWFuIHtcbiAgICB2YXIgY2hhbmdlZDphbnkgPSB0aGlzLl9jaGFuZ2VkO1xuICAgIHRoaXMuX2NoYW5nZWQgPSBmYWxzZTtcbiAgICBpZiAoIXRocm93T25DaGFuZ2UpIHsgdGhpcy5jb250ZXh0Lm5nRG9DaGVjaygpOyB9XG4gICAgcmV0dXJuIGNoYW5nZWQ7XG4gIH1cbiAgY2hlY2tIb3N0KHZpZXc6aW1wb3J0Mi5BcHBWaWV3PGFueT4sY29tcG9uZW50VmlldzppbXBvcnQyLkFwcFZpZXc8YW55PixlbDphbnksdGhyb3dPbkNoYW5nZTpib29sZWFuKTp2b2lkIHtcbiAgfVxuICBoYW5kbGVFdmVudChldmVudE5hbWU6c3RyaW5nLCRldmVudDphbnkpOmJvb2xlYW4ge1xuICAgIHZhciByZXN1bHQ6Ym9vbGVhbiA9IHRydWU7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuICBzdWJzY3JpYmUodmlldzppbXBvcnQyLkFwcFZpZXc8YW55PixfZXZlbnRIYW5kbGVyOmFueSk6dm9pZCB7XG4gICAgdGhpcy5fZXZlbnRIYW5kbGVyID0gX2V2ZW50SGFuZGxlcjtcbiAgfVxufSJdfQ==