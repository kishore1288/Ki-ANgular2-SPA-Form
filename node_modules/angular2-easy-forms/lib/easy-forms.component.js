"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var control_group_service_1 = require('./control-group.service');
var EasyFormsComponent = (function () {
    function EasyFormsComponent(_controlGroup) {
        this._controlGroup = _controlGroup;
        this.onSubmit = new core_1.EventEmitter();
        this.onChanges = new core_1.EventEmitter();
    }
    Object.defineProperty(EasyFormsComponent.prototype, "easyFormData", {
        set: function (value) {
            this._data = value;
            this._data.settings = this._setSettings(value.settings);
            this.sortQuestions();
            var cg = this._controlGroup.create(this._data.questions);
            this._form = cg.fbGroup;
            this._matches = cg.matches;
            this.comp = {
                data: this._data,
                form: this._form,
                settings: {
                    singleErrorMessage: this._data.settings.singleErrorMessage,
                    errorOnDirty: this._data.settings.errorOnDirty,
                    showValidation: this._data.settings.showValidation,
                    extraValidation: this._data.settings.submitButtonExtraValidation || true
                }
            };
        },
        enumerable: true,
        configurable: true
    });
    EasyFormsComponent.prototype.submit = function () { this.onSubmit.emit(this._form.value); };
    EasyFormsComponent.prototype.onQuestionValueChange = function (event) {
        if (this._matches) {
            var key_1 = Object.keys(event)[0], mat = this._matches.find(function (a) { return a.toMatch === key_1; });
            if (mat)
                this._form.controls[mat.model].updateValueAndValidity();
        }
        this.onChanges.emit(event);
    };
    EasyFormsComponent.prototype.sortQuestions = function () { this._data.questions.sort(function (a, b) { return a.order - b.order; }); };
    EasyFormsComponent.prototype._setSettings = function (settings) {
        var defaultSettings = {
            submitButton: true,
            submitButtonText: 'Submit',
            submitButtonExtraValidation: null,
            showValidation: true,
            singleErrorMessage: true,
            errorOnDirty: true
        };
        if (settings)
            for (var p in defaultSettings)
                defaultSettings[p] = settings.hasOwnProperty(p) ? settings[p] : defaultSettings[p];
        return defaultSettings;
    };
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object), 
        __metadata('design:paramtypes', [Object])
    ], EasyFormsComponent.prototype, "easyFormData", null);
    __decorate([
        core_1.Output(), 
        __metadata('design:type', core_1.EventEmitter)
    ], EasyFormsComponent.prototype, "onSubmit", void 0);
    __decorate([
        core_1.Output(), 
        __metadata('design:type', core_1.EventEmitter)
    ], EasyFormsComponent.prototype, "onChanges", void 0);
    EasyFormsComponent = __decorate([
        core_1.Component({
            selector: 'easy-form',
            template: "\n        <form (ngSubmit)=\"submit()\" [formGroup]=\"comp.form\" [ngClass]=\"comp.data.classes?.form\">\n            <ef-question *ngFor=\"let q of comp.data.questions\" [info]=\"{question: q, form: comp.form, settings: comp.settings}\" (valueChange)=\"onQuestionValueChange($event)\"></ef-question>\n            <div *ngIf=\"comp.data.settings.submitButton\" [ngClass]=\"comp.data.classes?.submit\">\n                <button type=\"submit\" [disabled]=\"!comp.form.valid && comp.settings.extraValidation\">{{comp.data.settings.submitButtonText}}</button>\n            </div>\n        </form>\n    "
        }), 
        __metadata('design:paramtypes', [control_group_service_1.ControlGroupService])
    ], EasyFormsComponent);
    return EasyFormsComponent;
}());
exports.EasyFormsComponent = EasyFormsComponent;
//# sourceMappingURL=easy-forms.component.js.map